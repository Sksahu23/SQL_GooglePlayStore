Use googleplaystore;

# Show Complete Table
SELECT * FROM appstore;


# 1) Count the Number of Apps in Each Category:
SELECT Category, COUNT(*) AS AppCount
FROM appstore
GROUP BY Category
ORDER BY AppCount DESC;


# 2) Find Apps with Ratings Greater Than 4.5:
SELECT App, Rating
FROM appstore
WHERE Rating > 4.5;


# 3) Calculate the Average Rating for Each Category:
SELECT Category, round(AVG(Rating),2) AS AvgRating
FROM appstore
GROUP BY Category
ORDER BY AvgRating DESC;


# 4) List Apps with the Most Reviews:
SELECT App, Reviews
FROM appstore
ORDER BY Reviews DESC
LIMIT 10;


# 5) Find Free vs. Paid Apps Distribution:
SELECT Type, COUNT(*) AS AppCount
FROM appstore
GROUP BY Type;


# 6) Apps with the Largest Size:
SELECT App, Size
FROM appstore
ORDER BY Size DESC
LIMIT 10;


# 7) Most Installed Apps:
SELECT App, Installs
FROM appstore
ORDER BY Installs DESC
LIMIT 10;


# 8) List the Top 5 Categories with the Highest Average Rating and more than 10,000 installs:
SELECT Category, round(AVG(Rating),2) AS AvgRating
FROM appstore
WHERE Installs > 10000
GROUP BY Category
HAVING COUNT(*) > 10
ORDER BY AvgRating DESC
LIMIT 5;


# 9) Calculate the Total Number of Installs for Each Content Rating:
SELECT `Content Rating`, SUM(Installs) AS TotalInstalls
FROM appstore
GROUP BY `Content Rating`;


# 10) Find the Average Size of Apps in each Category, rounded to the nearest ten thousand:
SELECT Category, round(AVG(Size)) AS AvgSize
FROM appstore
GROUP BY Category;


# 11) List the Apps with the Most Recent Update in each Category:
SELECT Category, App, `Last Updated`
FROM (
    SELECT Category, App, `Last Updated`,
           ROW_NUMBER() OVER (PARTITION BY
           Category ORDER BY STR_TO_DATE(`Last Updated`,
           '%M %d, %Y') DESC) AS rn
    FROM appstore
) ranked
WHERE rn = 1;


# 12) Calculate the Percentage of Apps in Each Category Relative to the Total Number of Apps:
SELECT Category, round(COUNT(*) / (SELECT COUNT(*) FROM appstore) * 100,3) AS CategoryPercentage
FROM appstore
GROUP BY Category;


# 13) Calculate the Total Revenue Generated by Paid Apps:
SELECT SUM(Price * Installs) AS TotalRevenue
FROM appstore
WHERE Type = 'Paid';


# 14) List the Top 5 App Genres with the Most Installations for Apps with a Rating above 4.5:
SELECT Genres, SUM(Installs) AS TotalInstalls
FROM appstore
WHERE Rating > 4.5
GROUP BY Genres
ORDER BY TotalInstalls DESC
LIMIT 5;


# 15) Find the Average Size of Apps in Each Category, Broken Down by Content Rating:
SELECT `Category`, `Content Rating`, round(AVG(`Size`),2) AS AvgSize
FROM appstore
GROUP BY `Category`, `Content Rating`;


# 16) Calculate the Standard Deviation of Ratings for each Category:
SELECT Category, round(STDDEV(Rating),4) AS RatingStdDev
FROM appstore
GROUP BY Category;


# 17) Calculate the Percentage of Apps with Over 100,000 Reviews in Each Content Rating Category:
SELECT `Content Rating`, SUM(CASE WHEN Reviews > 100000 THEN 1 ELSE 0 END) / COUNT(*) * 100 AS Percentage
FROM appstore
GROUP BY `Content Rating`;


# 18) Find the Categories with Apps Released Most Recently, and List the Latest App in Each Category:
SELECT Category, App, `Last Updated`
FROM (
    SELECT Category, App, `Last Updated`,
           ROW_NUMBER() OVER (PARTITION BY Category ORDER BY STR_TO_DATE(`Last Updated`, '%M %d, %Y') DESC) AS rn
    FROM appstore
) ranked
WHERE rn = 1;